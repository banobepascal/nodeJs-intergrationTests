{"message":"Something failed during startup.","stack":"Error: Something failed during startup.\n    at Object.<anonymous> (/home/pascal/Documents/Node-projects/Auth/index.js:26:7)\n    at Module._compile (module.js:652:30)\n    at Object.Module._extensions..js (module.js:663:10)\n    at Module.load (module.js:565:32)\n    at tryModuleLoad (module.js:505:12)\n    at Function.Module._load (module.js:497:3)\n    at Function.Module.runMain (module.js:693:10)\n    at startup (bootstrap_node.js:188:16)\n    at bootstrap_node.js:609:3","level":"error","timestamp":"2019-06-26T13:17:34.244Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/home/pascal/Documents/Node-projects/Auth/routes/genres.js:10:11)\n    at newFn (/home/pascal/Documents/Node-projects/Auth/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/route.js:112:3)\n    at newFn (/home/pascal/Documents/Node-projects/Auth/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/layer.js:95:5)\n    at /home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:335:12)\n    at next (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:174:3)\n    at router (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:47:12)\n    at newFn (/home/pascal/Documents/Node-projects/Auth/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:317:13)\n    at /home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:284:7\n    at Function.process_params (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:335:12)\n    at next (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:275:10)\n    at /home/pascal/Documents/Node-projects/Auth/node_modules/body-parser/lib/read.js:130:5\n    at invokeCallback (/home/pascal/Documents/Node-projects/Auth/node_modules/raw-body/index.js:224:16)\n    at done (/home/pascal/Documents/Node-projects/Auth/node_modules/raw-body/index.js:213:7)\n    at IncomingMessage.onEnd (/home/pascal/Documents/Node-projects/Auth/node_modules/raw-body/index.js:273:7)","level":"error","timestamp":"2019-06-26T13:35:55.637Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/home/pascal/Documents/Node-projects/Auth/routes/genres.js:10:11)\n    at newFn (/home/pascal/Documents/Node-projects/Auth/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/route.js:112:3)\n    at newFn (/home/pascal/Documents/Node-projects/Auth/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/layer.js:95:5)\n    at /home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:335:12)\n    at next (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:174:3)\n    at router (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:47:12)\n    at newFn (/home/pascal/Documents/Node-projects/Auth/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:317:13)\n    at /home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:284:7\n    at Function.process_params (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:335:12)\n    at next (/home/pascal/Documents/Node-projects/Auth/node_modules/express/lib/router/index.js:275:10)\n    at /home/pascal/Documents/Node-projects/Auth/node_modules/body-parser/lib/read.js:130:5\n    at invokeCallback (/home/pascal/Documents/Node-projects/Auth/node_modules/raw-body/index.js:224:16)\n    at done (/home/pascal/Documents/Node-projects/Auth/node_modules/raw-body/index.js:213:7)\n    at IncomingMessage.onEnd (/home/pascal/Documents/Node-projects/Auth/node_modules/raw-body/index.js:273:7)","level":"error","timestamp":"2019-06-26T13:48:22.194Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-06-26T15:25:51.458Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T11:35:44.337Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T11:36:10.284Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2020-01-01T11:36:10.337Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T11:37:07.137Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2020-01-01T11:37:07.184Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T11:37:51.863Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T11:37:51.911Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:14:43.956Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:14:44.061Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:16:18.823Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:16:18.865Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:17:56.542Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:17:56.679Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:18:05.212Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:18:05.253Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:18:54.694Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:18:54.802Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:19:01.758Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:19:01.805Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:19:26.472Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:19:26.613Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:19:42.506Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:19:42.554Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:19:50.680Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:19:50.792Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:20:06.349Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:20:06.451Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:21:16.773Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:21:16.885Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:21:35.079Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:21:35.125Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:22:41.946Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:22:42.059Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:23:22.317Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:23:22.427Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:23:50.277Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:23:50.314Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:24:21.835Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:24:22.041Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:24:46.201Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:24:46.303Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:32:55.643Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:32:55.688Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:39:00.386Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:39:00.563Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:39:55.362Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:39:55.517Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:40:05.968Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:40:06.082Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:40:11.027Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:40:11.170Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:40:17.513Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:40:17.631Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:40:26.428Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:40:26.490Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:40:36.092Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:40:36.121Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:40:57.586Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:40:57.615Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:41:07.999Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:41:08.027Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:41:12.723Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:41:12.828Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:41:20.221Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:41:20.322Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:41:31.418Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:41:31.520Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:43:21.479Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:43:21.609Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:44:32.326Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:44:32.427Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:46:19.885Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:46:19.973Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:46:32.959Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:46:32.992Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:47:06.627Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:47:06.731Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:50:55.389Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:50:55.480Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:51:02.771Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:51:02.892Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:51:13.899Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:51:14.017Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:51:32.403Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:51:32.502Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:51:38.045Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:51:38.072Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:51:48.077Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:51:48.188Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:51:59.844Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:51:59.947Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T12:52:13.375Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T12:52:13.481Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:00:00.161Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:00:00.265Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:00:09.493Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:00:09.638Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:00:16.784Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:00:16.919Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:00:24.339Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:00:24.460Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:00:31.028Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:00:31.112Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:00:36.652Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:00:36.742Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:00:42.838Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:00:42.994Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:00:51.572Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:00:51.722Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:00:59.809Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:00:59.846Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:01:14.107Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:01:14.211Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:01:19.562Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:01:19.666Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:01:27.252Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:01:27.367Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:01:32.253Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:01:32.406Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:01:37.698Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:01:37.810Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:01:45.597Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:01:45.702Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:01:51.966Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:01:52.004Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:02:02.876Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:02:02.986Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:02:08.129Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:02:08.235Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:02:17.576Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:02:17.695Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:02:27.068Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:02:27.235Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:02:33.796Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:02:33.826Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:02:41.151Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:02:41.259Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:02:58.989Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:02:59.092Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:03:27.076Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:03:27.185Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:03:35.475Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:03:35.511Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:03:40.162Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:03:40.263Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:03:44.974Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:03:45.081Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:03:50.362Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:03:50.392Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:03:56.405Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:03:56.512Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:04:52.626Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:04:52.656Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:07:58.493Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:07:58.538Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:08:08.092Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:08:08.252Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:08:20.798Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:08:20.902Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:08:25.870Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:08:26.012Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:08:48.460Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:08:48.579Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:08:55.140Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:08:55.250Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:09:00.048Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:09:00.148Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:09:12.325Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:09:12.354Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:09:18.143Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:09:18.259Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:09:27.426Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:09:27.523Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:09:31.652Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:09:31.769Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:09:40.510Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:09:40.551Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:09:52.052Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:09:52.150Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:10:03.255Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:10:03.284Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:10:44.286Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:10:44.396Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:10:54.841Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:10:54.944Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:11:43.629Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:11:43.735Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:12:00.121Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:12:00.148Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:12:52.331Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly ...","timestamp":"2020-01-01T13:12:52.358Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:15:45.686Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:15:45.794Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:16:34.657Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:16:34.696Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:16:45.825Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:16:45.956Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:16:54.127Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:16:54.227Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:17:07.428Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:17:07.528Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:17:47.214Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:17:47.315Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:18:14.380Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:18:14.484Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:19:22.160Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:19:22.188Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:19:37.589Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:19:37.618Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:20:14.992Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:20:15.025Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:20:19.921Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:20:19.950Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:21:26.502Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:21:26.638Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:21:32.933Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:21:33.068Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:21:43.411Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:21:43.565Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:21:59.455Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:21:59.484Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:22:49.942Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:22:49.970Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:22:50.102Z"}
{"message":"Genre validation failed: name: Path `name` (`1234`) is shorter than the minimum allowed length (5).","errors":{"name":{"message":"Path `name` (`1234`) is shorter than the minimum allowed length (5).","name":"ValidatorError","properties":{"message":"Path `name` (`1234`) is shorter than the minimum allowed length (5).","type":"minlength","minlength":5,"path":"name","value":"1234"},"kind":"minlength","path":"name","value":"1234"}},"_message":"Genre validation failed","stack":"ValidationError: Genre validation failed: name: Path `name` (`1234`) is shorter than the minimum allowed length (5).\n    at new ValidationError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/validation.js:30:11)\n    at model.Object.<anonymous>.Document.invalidate (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/document.js:2291:32)\n    at p.doValidate.skipSchemaValidators (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/document.js:2140:17)\n    at /home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1037:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2020-01-01T13:22:50.226Z"}
{"message":"Genre validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","errors":{"name":{"message":"Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","name":"ValidatorError","properties":{"message":"Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","type":"maxlength","maxlength":50,"path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"},"kind":"maxlength","path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"}},"_message":"Genre validation failed","stack":"ValidationError: Genre validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).\n    at new ValidationError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/validation.js:30:11)\n    at model.Object.<anonymous>.Document.invalidate (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/document.js:2291:32)\n    at p.doValidate.skipSchemaValidators (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/document.js:2140:17)\n    at /home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1037:9\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"ValidationError","level":"error","timestamp":"2020-01-01T13:22:50.236Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at castQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4389:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:3331:23)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2928:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:22:50.398Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at castQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4389:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:3331:23)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:3292:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:22:50.462Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:23:21.851Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:23:21.882Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:24:12.446Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:24:12.580Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:24:35.806Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:24:35.841Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:25:04.207Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:25:04.236Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:25:27.472Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:25:27.574Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:25:47.016Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:25:47.046Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:25:54.502Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:25:54.533Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:26:37.117Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:26:37.149Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:26:43.724Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:26:43.824Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:27:08.844Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:27:08.961Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:27:16.336Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:27:16.443Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:27:28.409Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:27:28.515Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:27:33.015Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:27:33.042Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:28:26.752Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:28:26.851Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:28:31.379Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:28:31.496Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:28:36.755Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:28:36.784Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:28:43.693Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:28:43.807Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:28:51.567Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:28:51.683Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:28:59.895Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:28:59.924Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:29:29.343Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:29:29.471Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:29:43.107Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:29:43.204Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:29:52.816Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:29:52.846Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:30:04.893Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:30:05.030Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:30:15.697Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:30:15.726Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:30:22.820Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:30:22.933Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:30:33.277Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:30:33.379Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:31:19.089Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:31:19.202Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:31:51.329Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:31:51.447Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:31:51.541Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:32:53.282Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:32:53.420Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:32:53.536Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:33:05.910Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:33:05.941Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:33:06.028Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:33:26.340Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:33:26.370Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:33:26.451Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:34:21.399Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:34:21.503Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:34:21.587Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:35:19.625Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:35:19.654Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:35:29.863Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:35:29.961Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:35:36.871Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:35:36.897Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:36:10.396Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:36:10.502Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:36:25.449Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:36:25.478Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:36:50.091Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:36:50.193Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:37:08.544Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:37:08.577Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:37:28.313Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:37:28.342Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:38:32.630Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:38:32.661Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:38:43.632Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:38:43.685Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:38:49.322Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:38:49.353Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:47:35.041Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:47:35.072Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:48:15.591Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:48:15.623Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:48:20.923Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:48:20.952Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:48:25.484Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:48:25.514Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:48:32.533Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:48:32.568Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:48:36.862Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:48:36.895Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:48:46.225Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:48:46.256Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:48:46.340Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:48:55.250Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:48:55.289Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:48:55.381Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:49:44.795Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:49:44.823Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:49:44.954Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:49:51.092Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:49:51.140Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:49:51.226Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:49:56.509Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:49:56.541Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:49:56.635Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:50:18.857Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:50:18.888Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:50:39.438Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:50:39.468Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:50:39.556Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:50:45.613Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:50:45.723Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:50:45.812Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:50:55.332Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:50:55.441Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/error/cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schema/objectid.js:244:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:948:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1362:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1352:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/schematype.js:1331:15)\n    at cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/cast.js:307:32)\n    at model.Query.Object.<anonymous>.Query.cast (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:4576:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:1783:10)\n    at model.Query.<anonymous> (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/query.js:2038:8)\n    at model.Query._wrappedThunk [as _findOne] (/home/pascal/Documents/Tests/intergration/node_modules/mongoose/lib/helpers/query/wrapThunk.js:16:8)\n    at process.nextTick (/home/pascal/Documents/Tests/intergration/node_modules/kareem/index.js:369:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2020-01-01T13:50:55.529Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:51:20.004Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:51:20.034Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2020-01-01T13:53:24.732Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test ...","timestamp":"2020-01-01T13:53:24.763Z"}
